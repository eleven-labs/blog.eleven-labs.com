@use "@eleven-labs/design-system/scss/abstracts" as *;

// Background wrapper---------------------------------
.tutorial-steps {
  --tutorial-steps-background: #d7e6ff;
  --tutorial-steps-color: var(--color-ultra-dark-grey);

  position: relative;
  background: var(--tutorial-steps-background);
  color: var(--tutorial-steps-color);
  padding: var(--spacing-l) var(--spacing-s) var(--spacing-s);
  border-radius: 4px;

  &__bold {
    font-weight: var(--font-weight-bold);
  }

  &__tag {
    position: absolute;
    left: 0;
    right: 0;
    top: -12px;
    width: fit-content;

    @include create-media-queries("md") {
      width: auto;
    }
  }
}

// Stepper--------------------------------------------
ol.tutorial-steps {
  --tutorial-stepper-size: var(--spacing-l); /* size of circle */
  --tutorial-stepper-light: var(--color-white);
  --tutorial-stepper-azure: var(--color-azure);
  --tutorial-stepper-dashed-bar: 2px; /* line thickness */
  --tutorial-stepper-link-color: var(--color-ultra-dark-grey);
}
// Organize and distribute step elements
ol.tutorial-steps {
  display: flex;
  align-items: flex-start;
  list-style: none;
  justify-content: space-between;
  margin: 20px 0;
  padding: 0;
  counter-reset: step;
  text-align: center;

  // Style links
  a {
    color: var(--tutorial-stepper-link-color);
  }

  // Step element structure
  li {
    display: flex;
    flex: 1;
    flex-direction: column;
    gap: 4px;
  }

  li:not(:last-child),
  li:not(:first-child) {
    margin: 0 0.25rem;
  }

  // Create step circle, set number inside step, set active styles
  li::before {
    content: counter(step) " ";
    counter-increment: step;
    display: block;
    margin: 0 auto;
    text-align: center;
    padding-top: 2px;
    width: var(--tutorial-stepper-size);
    height: var(--tutorial-stepper-size);
    background: var(--tutorial-stepper-azure);
    border: 2px solid var(--tutorial-stepper-azure);
    color: var(--tutorial-stepper-light);
    box-sizing: border-box;
    border-radius: 50%;
    z-index: 1;
  }
  // Keep not-selected elements with default style
  li.active ~ li::before {
    background: var(--tutorial-stepper-light);
    color: var(--tutorial-stepper-azure);
  }

  // set up for horizontal line
  li::after {
    content: "";
    order: -1;
  }

  //draw solid line
  li:not(:last-child):after {
    position: relative;
    top: 1.4rem;
    left: 50%;
    border: var(--tutorial-stepper-dashed-bar) solid var(--tutorial-stepper-azure);
  }

  //draw dashed line
  li.active::after,
  li.active ~ li:not(:last-child):after {
    border: var(--tutorial-stepper-dashed-bar) dashed var(--tutorial-stepper-azure);
  }

  // Manipulate last element in list
  li:last-child {
    // Compensate missing space since last element has no bar
    margin-top: var(--tutorial-stepper-dashed-bar);
    // Remove dashed line for last child if active
    &:after {
      border: none;
    }
  }

  // Desktop display
  @include create-media-queries("md") {
    flex-direction: column;

    li {
      flex-direction: row;
      gap: 0px;
      align-items: center;
      margin: 0;
    }

    // Add space with text on the right
    li::before {
      margin: 0 12px 0 0;
    }

    // adjustments for vertical line
    li:last-child {
      padding-left: var(--tutorial-stepper-dashed-bar);
    }

    li:not(:last-child) {
      padding-bottom: var(--tutorial-stepper-size);
      &:after {
        position: inherit;
        transform: translateX(1.1rem) translateY(var(--tutorial-stepper-size));
        height: var(--tutorial-stepper-size);
      }
    }
  }
}
