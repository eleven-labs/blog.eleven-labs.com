name: Audit Lighthouse

on:
  workflow_run:
    workflows:
      - Deploy
    types:
      - completed
  workflow_dispatch:

env:
  AWS_DEFAULT_REGION: eu-west-2

jobs:
  audit-lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Sets env vars for production
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          echo "ENV_URL=https://blog.eleven-labs.com" >> $GITHUB_ENV

      - name: Sets env vars for dev and configure website
        if: github.event_name == 'pull_request'
        run: |
          echo "ENV_URL=http://dev.blog.eleven-labs.com.s3-website.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/${{ github.head_ref }}" >> $GITHUB_ENV

      - name: Audit URLs using Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            ${{ env.ENV_URL }}/
            ${{ env.ENV_URL }}/authors/ajacquemin/
            ${{ env.ENV_URL }}/fr/comment-construire-site-web-avec-nextjs/
            ${{ env.ENV_URL }}/fr/nestjs-le-cycle-de-vie-dune-requete/
          configPath: ./.github/workflows/lighthousesrc.json
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v6
        with:
          script: |
            const lighthouseCommentMaker = require('./.github/workflows/lighthouseCommentMaker.js');
            const lighthouseOutputs = {
              manifest: ${{ steps.lighthouse_audit.outputs.manifest }},
              links: ${{ steps.lighthouse_audit.outputs.links }},
              assertionResults: ${{ steps.lighthouse_audit.outputs.assertionResults }}
            };
            const comment = lighthouseCommentMaker({ lighthouseOutputs });
            core.setOutput("comment", comment);

      - name: Add Lighthouse stats as comment
        id: comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: lighthouse
          message: ${{ steps.format_lighthouse_score.outputs.comment }}
